<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.SitesMapper">
    <resultMap id="BaseResultMap" type="com.demo.entity.Sites">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="region" jdbcType="VARCHAR" property="region" />
        <result column="site_name" jdbcType="VARCHAR" property="siteName" />
        <result column="capacity" jdbcType="INTEGER" property="capacity" />
    </resultMap>
    <sql id="Base_Column_List">
        `id`, `region`, `site_name`, `capacity`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sites
        where `id` = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sites
        where `id` = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.demo.entity.Sites">
        insert into sites (`region`, `site_name`, `capacity`)
        values (#{region,jdbcType=VARCHAR}, #{siteName,jdbcType=VARCHAR}, #{capacity,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.demo.entity.Sites">
        insert into sites
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="region != null">
                `region`,
            </if>
            <if test="siteName != null">
                `site_name`,
            </if>
            <if test="capacity != null">
                `capacity`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="region != null">
                #{region,jdbcType=VARCHAR},
            </if>
            <if test="siteName != null">
                #{siteName,jdbcType=VARCHAR},
            </if>
            <if test="capacity != null">
                #{capacity,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.Sites">
        update sites
        <set>
            <if test="region != null">
                `region` = #{region,jdbcType=VARCHAR},
            </if>
            <if test="siteName != null">
                `site_name` = #{siteName,jdbcType=VARCHAR},
            </if>
            <if test="capacity != null">
                `capacity` = #{capacity,jdbcType=INTEGER},
            </if>
        </set>
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.demo.entity.Sites">
        update sites
        set
        `region` = #{region,jdbcType=VARCHAR},
        `site_name` = #{siteName,jdbcType=VARCHAR},
        `capacity` = #{capacity,jdbcType=INTEGER}
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <select id="query" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from sites
        <where>
            <if test="region != null">
                and `region` = #{region,jdbcType=VARCHAR}
            </if>
            <if test="siteName != null">
                and `site_name` = #{siteName,jdbcType=VARCHAR}
            </if>
            <if test="capacity != null">
                and `capacity` = #{capacity,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <select id="statistics" resultType="java.util.HashMap">
        SELECT orders.`end_site` site, sites.`site_name` AS xx, COUNT(1) AS yy
        FROM orders, sites
        <![CDATA[
            WHERE HOUR(order_time) <= 16 AND
            DATE_SUB(CURDATE(), INTERVAL 1 DAY) < DATE(DATE_FORMAT(order_time, '%Y-%m-%d')) AND sites.`id` = orders.`end_site`
            GROUP BY xx
        ]]>
    </select>
    <select id="achievement" resultType="java.util.HashMap">
         <![CDATA[
        SELECT sites.region AS xx, COUNT(1) AS yy
            FROM orders, sites
            WHERE   orders.state IN (3,4,5,1)
            AND order_time >= #{startDate}
            AND order_time <= #{endDate} AND sites.`id` = orders.`end_site`
            GROUP BY xx
        ]]>
    </select>
</mapper>
