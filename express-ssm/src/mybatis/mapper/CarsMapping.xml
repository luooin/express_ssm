<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.CarsMapper">
    <resultMap id="BaseResultMap" type="com.demo.entity.Cars">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
        <result column="drivers" jdbcType="INTEGER" property="drivers" />
        <result column="state" jdbcType="INTEGER" property="state" />
        <result column="load_cap" jdbcType="DOUBLE" property="loadCap" />
        <result column="load_volume" jdbcType="DOUBLE" property="loadVolume" />
        <result column="colour" jdbcType="VARCHAR" property="colour" />
    </resultMap>
    <sql id="Base_Column_List">
        `id`, `car_number`, `drivers`, `state`, `load_cap`, `load_volume`, `colour`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from cars
        where `id` = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from cars
        where `id` = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.demo.entity.Cars">
        insert into cars (`car_number`, `drivers`, `state`, `load_cap`, `load_volume`, `colour`)
        values (#{carNumber,jdbcType=VARCHAR}, #{drivers,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{loadCap,jdbcType=DOUBLE}, #{loadVolume,jdbcType=DOUBLE}, #{colour,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.demo.entity.Cars">
        insert into cars
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="carNumber != null">
                `car_number`,
            </if>
            <if test="drivers != null">
                `drivers`,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="loadCap != null">
                `load_cap`,
            </if>
            <if test="loadVolume != null">
                `load_volume`,
            </if>
            <if test="colour != null">
                `colour`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="carNumber != null">
                #{carNumber,jdbcType=VARCHAR},
            </if>
            <if test="drivers != null">
                #{drivers,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="loadCap != null">
                #{loadCap,jdbcType=DOUBLE},
            </if>
            <if test="loadVolume != null">
                #{loadVolume,jdbcType=DOUBLE},
            </if>
            <if test="colour != null">
                #{colour,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.demo.entity.Cars">
        update cars
        <set>
            <if test="carNumber != null">
                `car_number` = #{carNumber,jdbcType=VARCHAR},
            </if>
            <if test="drivers != null">
                `drivers` = #{drivers,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=INTEGER},
            </if>
            <if test="loadCap != null">
                `load_cap` = #{loadCap,jdbcType=DOUBLE},
            </if>
            <if test="loadVolume != null">
                `load_volume` = #{loadVolume,jdbcType=DOUBLE},
            </if>
            <if test="colour != null">
                `colour` = #{colour,jdbcType=VARCHAR},
            </if>
        </set>
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.demo.entity.Cars">
        update cars
        set
        `car_number` = #{carNumber,jdbcType=VARCHAR},
        `drivers` = #{drivers,jdbcType=INTEGER},
        `state` = #{state,jdbcType=INTEGER},
        `load_cap` = #{loadCap,jdbcType=DOUBLE},
        `load_volume` = #{loadVolume,jdbcType=DOUBLE},
        `colour` = #{colour,jdbcType=VARCHAR}
        where `id` = #{id,jdbcType=INTEGER}
    </update>
    <select id="query" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from cars
        <where>
            <if test="carNumber != null">
                and `car_number` = #{carNumber,jdbcType=VARCHAR}
            </if>
            <if test="drivers != null">
                and `drivers` = #{drivers,jdbcType=INTEGER}
            </if>
            <if test="state != null">
                and `state` = #{state,jdbcType=INTEGER}
            </if>
            <if test="loadCap != null">
                and `load_cap` = #{loadCap,jdbcType=DOUBLE}
            </if>
            <if test="loadVolume != null">
                and `load_volume` = #{loadVolume,jdbcType=DOUBLE}
            </if>
            <if test="colour != null">
                and `colour` = #{colour,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="queryBad" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from cars WHERE state != 3 AND state != 4
    </select>
    <select id="queryUnuse" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from cars WHERE state = 0
    </select>
</mapper>
